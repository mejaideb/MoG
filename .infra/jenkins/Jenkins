pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                sh script: '''
                    echo "I am in build step!"
                    chmod 777 gradlew
                    ./gradlew build
                ''',
            label: "Building Project"
            }
        }
        stage('Test')
        {
            steps {
                sh script: '''
                    echo "I am in Test step"
                    ./gradlew test
                ''',
            label: "Running Unit Test Cases"
            }
        }
        stage('Static Code Analysis')
        {
            environment {
        	scannerHome = tool 'SonarQubeScanner'
    			}
    	    steps {
       		 withSonarQubeEnv('SonarQube') {
                 sh "${scannerHome}/bin/sonar-scanner"
        	   }
        	timeout(time: 10, unit: 'MINUTES') {
           	 waitForQualityGate abortPipeline: true
        	}
    		}
        }
        stage('Build DockerImage')
        {
            steps {
                sh script: '''
                    echo "I am Building DockerImage ="
                    docker build -t mog:1 .
                ''',
            label: "Building Docker Image"
            }
        }
        stage('Publish DockerImage')
        {
            steps {
                sh script: '''
                    echo "I am Pubishing DockerImage ="
                    docker tag mog:1 mejaideb/merchantofgalaxy
                    docker push mejaideb/merchantofgalaxy
                ''',
            label: "Publishing Docker Image"
            }
        }
    }
    post{
    always{
    		deleteDir()
		}
	}
}
